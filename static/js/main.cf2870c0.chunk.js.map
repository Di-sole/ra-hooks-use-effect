{"version":3,"sources":["components/List.js","components/Details.js","App.js","reportWebVitals.js","index.js"],"names":["List","users","handleClick","className","map","user","onClick","id","name","Details","info","useState","setUser","loading","setLoading","useEffect","fetch","process","then","resp","json","data","e","console","log","src","avatar","alt","details","city","company","position","App","setUsers","selected","setSelected","finally","selectedUser","find","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAUeA,MAVf,YAAuC,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,YACtB,OACC,oBAAIC,UAAU,YAAd,SAEEF,EAAMG,KAAI,SAAAC,GAAI,OAAI,oBAAkBF,UAAU,iBAAiBG,QAAS,kBAAMJ,EAAYG,EAAKE,KAA7E,SAAmFF,EAAKG,MAA/EH,EAAKE,UC+BrBE,MAjCf,YAA4B,IAATC,EAAQ,EAARA,KAAQ,EACFC,mBAAS,MADP,mBACnBN,EADmB,KACbO,EADa,OAEID,oBAAS,GAFb,mBAEnBE,EAFmB,KAEVC,EAFU,KAiB1B,OAbAC,qBAAU,WACTD,GAAW,GACX,IACCE,MAAM,GAAD,OAAIC,sGAAJ,YAAsCP,EAAKH,GAA3C,UACHW,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GAAD,OAAUT,EAAQS,MACxB,MAAOC,GACRC,QAAQC,IAAIF,GALb,QAOCR,GAAW,MAEV,CAACJ,EAAKH,KAGR,qCACEM,GAAW,6CACXR,GACA,sBAAKF,UAAU,eAAf,UACC,qBAAKsB,IAAKpB,EAAKqB,OAAQC,IAAKtB,EAAKG,OACjC,mBAAGL,UAAU,sBAAb,SAAoCE,EAAKG,OACzC,oBAAGL,UAAU,YAAb,mBAAgCE,EAAKuB,QAAQC,QAC7C,oBAAG1B,UAAU,YAAb,sBAAmCE,EAAKuB,QAAQE,WAChD,oBAAG3B,UAAU,YAAb,uBAAoCE,EAAKuB,QAAQG,mBCGvCC,MA1Bf,WAAgB,IAAD,EACYrB,mBAAS,IADrB,mBACPV,EADO,KACAgC,EADA,OAEkBtB,mBAAS,MAF3B,mBAEPuB,EAFO,KAEGC,EAFH,OAGgBxB,oBAAS,GAHzB,mBAGPE,EAHO,KAGEC,EAHF,KAkBb,OAbDC,qBAAU,WACTD,GAAW,GACXE,MAAM,GAAD,OAAIC,sGAAJ,gBACHC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GAAD,OAAUY,EAASZ,MACxBe,SAAQ,kBAAMtB,GAAW,QACzB,IAQA,sBAAKX,UAAU,MAAf,UACAU,EAAU,sFAAyB,cAAC,EAAD,CAAMZ,MAAOA,EAAOC,YAPtC,SAACK,GACpB,IAAM8B,EAAepC,EAAMqC,MAAK,SAAAjC,GAAI,OAAIA,EAAKE,KAAOA,KACpD4B,EAAYE,MAMVH,EAAW,cAAC,EAAD,CAASxB,KAAMwB,IAAe,SCd9BK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.cf2870c0.chunk.js","sourcesContent":["function List({ users, handleClick }) {\n\treturn (\n\t\t<ul className=\"user-list\">\n\t\t\t{\n\t\t\t\tusers.map(user => <li key={user.id} className=\"user-list-elem\" onClick={() => handleClick(user.id)}>{user.name}</li>)\n\t\t\t}\n\t\t</ul>\n\t)\n}\n\nexport default List;","import { useEffect, useState } from \"react\";\n\nfunction Details({ info }) {\n\tconst [user, setUser] = useState(null);\n\tconst [loading, setLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tsetLoading(true);\n\t\ttry {\n\t\t\tfetch(`${process.env.REACT_APP_DATA_URL}/${info.id}.json`)\n\t\t\t\t.then((resp) => resp.json())\n\t\t\t\t.then((data) => setUser(data))\n\t\t} catch (e) {\n\t\t\tconsole.log(e)\n\t\t} finally {\n\t\t\tsetLoading(false)\n\t\t}\n\t}, [info.id]);\n\n\treturn (\n\t\t<>\n\t\t\t{loading && <div>Loading...</div>}\n\t\t\t{user && \n\t\t\t\t<div className=\"user-details\">\n\t\t\t\t\t<img src={user.avatar} alt={user.name}/>\n\t\t\t\t\t<p className=\"user-info user-name\">{user.name}</p>\n\t\t\t\t\t<p className=\"user-info\">City: {user.details.city}</p>\n\t\t\t\t\t<p className=\"user-info\">Company: {user.details.company}</p>\n\t\t\t\t\t<p className=\"user-info\">Position: {user.details.position}</p>\n\t\t\t\t</div>\n\t\t\t}\n\t\t</>\n\t)\n}\n\nexport default Details;","import './App.css';\nimport { useState, useEffect } from 'react';\nimport List from './components/List';\nimport Details from './components/Details';\n\nfunction App() {\n\tconst [users, setUsers] = useState([]);\n\tconst [selected, setSelected] = useState(null);\n\tconst [loading, setLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tsetLoading(true);\n\t\tfetch(`${process.env.REACT_APP_DATA_URL}/users.json`)\n\t\t\t.then((resp) => resp.json())\n\t\t\t.then((data) => setUsers(data))\n\t\t\t.finally(() => setLoading(false))\n\t}, []);\n\n\tconst handleClick = (id) => {\n\t\tconst selectedUser = users.find(user => user.id === id);\n\t\tsetSelected(selectedUser);\n\t}\n\n  return (\n    <div className=\"App\">\n\t\t\t{loading ? <div>Загрузка...</div> : <List users={users} handleClick={handleClick} />}\n\t\t\t{selected ? <Details info={selected} /> : null}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}